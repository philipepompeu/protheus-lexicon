upstream backend_servers 
{
    server lexicon-api1:8080;#precisa bater com o nome dos containers
    server lexicon-api2:8080;#precisa bater com o nome dos containers
}

server {
    listen 80;

    server_name localhost;

    # Servir o frontend Vue.js
    location / {
        proxy_pass http://frontend:80;  # ?? Apontando para o container do frontend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;            
        
    }

    location /api/ {
        rewrite ^/api(/.*)$ $1 break;
        proxy_pass http://backend_servers/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /api;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 8080;

        # CORS Headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";
        add_header Access-Control-Max-Age 3600;

            # Responder diretamente a requisições OPTIONS (pré-flight)
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # Swagger UI principal
    location /swagger-ui.html {
        proxy_pass http://backend_servers/swagger-ui.html;
    }

    # Recursos do Swagger (CSS, JS, imagens)
    location /swagger-ui/ {
        proxy_pass http://backend_servers/swagger-ui/;
    }

    # Documentação JSON da API
    location /v3/api-docs {
        proxy_pass http://backend_servers/v3/api-docs;
    }

    # Bibliotecas JavaScript/CSS
    location /webjars/ {
        proxy_pass http://backend_servers/webjars/;
    }
}